/* empty css                              *//* empty css                              *//* empty css                      */import{s as c,h as i,c as y,a as e,I as d,j as t,n as _,w as F,D as p,o as b,t as m}from"./chunks/framework.CVnMUigJ.js";const v=t("h1",{id:"file",tabindex:"-1"},[e("File "),t("a",{class:"header-anchor",href:"#file","aria-label":'Permalink to "File"'},"​")],-1),w=t("p",null,[e("This section presents the file input element that can be used in HTML forms. Each example includes the HTML code and styling using the "),t("code",null,"sf-input"),e(" class.")],-1),S=t("br",null,null,-1),x=t("hr",null,null,-1),k=t("br",null,null,-1),C=["disabled"],T=t("h2",{id:"conclusion",tabindex:"-1"},[e("Conclusion "),t("a",{class:"header-anchor",href:"#conclusion","aria-label":'Permalink to "Conclusion"'},"​")],-1),D=t("p",null,[e("Using this example, you can create forms with file input elements. All elements are styled using the "),t("code",null,"sf-input"),e(" class for a consistent look and feel.")],-1),E=JSON.parse('{"title":"File","titleTemplate":"Style-Forge.Form","description":"File | Style-Forge.Form: versatile component for easy creation, styling, and handling of file inputs in web apps.","frontmatter":{"title":"File","titleTemplate":"Style-Forge.Form","description":"File | Style-Forge.Form: versatile component for easy creation, styling, and handling of file inputs in web apps.","head":[["meta",{"name":"keywords","content":"style-forge, file, input, upload, styling, web development, frontend, file elements, file styles, responsive"}],["meta",{"property":"og:title","content":"File | Style-Forge.Form"}],["meta",{"property":"og:description","content":"File | Style-Forge.Form: versatile component for easy creation, styling, and handling of file inputs in web apps."}],["meta",{"property":"og:url","content":"https://style-forge.dev/form/file.html"}],["meta",{"name":"twitter:title","content":"File | Style-Forge.Form"}],["meta",{"name":"twitter:description","content":"File | Style-Forge.Form: versatile component for easy creation, styling, and handling of file inputs in web apps."}]]},"headers":[],"relativePath":"form/file.md","filePath":"form/file.md","lastUpdated":1720990196000}'),L={name:"form/file.md"},H=Object.assign(L,{setup(N){const s=c(!1),l=c(!1),u=i(()=>s.value?"sf-loading":null),f=i(()=>l.value?" disabled":null),a=i(()=>["sf-input",u.value].filter(r=>r).join(" "));return(r,n)=>{const h=p("actions"),g=p("highlight");return b(),y("div",null,[v,e(),w,e(),d(h,{onDisabled:n[0]||(n[0]=o=>l.value=o),onLoading:n[1]||(n[1]=o=>s.value=o)}),S,e(),x,e(),k,e(),t("input",{class:_(a.value),type:"file",disabled:l.value},null,10,C),e(),d(g,{lang:"html"},{default:F(()=>[e(`
<input class="`+m(a.value)+'" type="file"'+m(f.value)+` />
`,1)]),_:1}),e(),T,e(),D])}}});export{E as __pageData,H as default};
