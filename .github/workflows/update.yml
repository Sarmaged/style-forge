name: Update style-forge

on:
  repository_dispatch:
    types: [update-style-forge]

permissions:
  contents: write

jobs:
  update-helpers:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Configure git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Yarn
        run: yarn install

      - name: Determine version update type
        id: get_update_type
        run: echo "Update type is ${{ github.event.client_payload.update_type }}"

      - name: Update dependencies
        run: yarn upgrade --latest

      - name: Increment version
        run: |
          if [ "${{ github.event.client_payload.update_type }}" == "patch" ]; then
            yarn version --patch
          else
            yarn version --minor
          fi

      - name: Build project
        run: yarn build

      - name: Check for changes
        id: git-status
        run: |
          git add package.json yarn.lock style-forge.css
          git diff --cached --exit-code || echo "Changes detected" > changes.txt
          if [ -f changes.txt ]; then echo "changes=true" >> $GITHUB_ENV; else echo "changes=false" >> $GITHUB_ENV; fi
        continue-on-error: true

      - name: Commit changes
        if: env.changes == 'true'
        run: |
          git commit -m 'chore: update dependencies and increment version'

      - name: Push changes
        if: env.changes == 'true'
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          tags: true

      - name: Set up NPM auth
        if: env.changes == 'true'
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish to npm
        if: env.changes == 'true'
        run: yarn publish --non-interactive
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
